import{a as I,b as M}from"./chunk-ZPXNW4X5.js";import{a as H}from"./chunk-EUGMDK4R.js";import"./chunk-XTGUBST2.js";import{a as _}from"./chunk-BS476JB7.js";import{a as x}from"./chunk-5CHBWRLU.js";import"./chunk-SLWN4ZJ3.js";import"./chunk-CGQV4V24.js";import{d as g,f as D}from"./chunk-MAIAJ7GD.js";import"./chunk-4PGNX6E2.js";import{a as y,b as S}from"./chunk-3Z22DWGV.js";import"./chunk-6UYK5TIR.js";import"./chunk-I56VJWE4.js";import"./chunk-PS3S6BG3.js";import"./chunk-RT4Y2U5N.js";import"./chunk-2VHH444P.js";import"./chunk-RIMU4JTV.js";import"./chunk-MGLVPWSV.js";import{c as E}from"./chunk-TXKWPME2.js";import{a as w}from"./chunk-XCAARJ7Q.js";import"./chunk-AOA7NX2Y.js";import"./chunk-HXZH2DHB.js";import"./chunk-MZG4RHXJ.js";import"./chunk-VTST2UXT.js";import{o as c,za as O}from"./chunk-X7YMANPZ.js";import"./chunk-IRITFTWC.js";import{G as T}from"./chunk-SOHTSUTI.js";import{I as P,w as d}from"./chunk-RPZQDAIQ.js";import"./chunk-LDRI4AYU.js";import"./chunk-V4F2JFTP.js";import"./chunk-6DDC4Y2S.js";import"./chunk-RKHQOOTU.js";import"./chunk-KJOC4LFM.js";import"./chunk-6FDO4Y56.js";import"./chunk-NNZ5SU5W.js";import"./chunk-YUXYCITH.js";import"./chunk-RMV3AS5X.js";import"./chunk-SF2LTPAC.js";import"./chunk-TEKDZ77C.js";import"./chunk-NC54RUAI.js";import"./chunk-YR74Q3QD.js";import{f,m,o as l}from"./chunk-EQYVU4XP.js";m();l();var e=f(E());var u=f(I());O();D();var v=f(H());P();var h=class extends M{async signTransaction(o,t,a){let p=o.hdPathMap[c];t=x(t);let r=y(t),{payload:n,success:s}=await u.default.ethereumSignTransaction({path:p,transaction:{...r.toJSON(),to:(0,e.bufferToHex)(r.to).toString(),chainId:t.chainId}});if(s){globalThis.platform.focusCurrentWindow();let i=S(r,{...n});return _(i,t.from)?a?i:{rawTxResult:i}:this.throwInvalidPassPhraseTip()}return this.throwTxCancelTip()}async signPersonalMessage(o,t={}){let a=o.hdPathMap[c],{data:p=""}=t||{},{success:r,payload:n}=await u.default.ethereumSignMessage({path:a,message:(0,e.stripHexPrefix)(p),hex:!0});if(r){globalThis.platform.focusCurrentWindow();let{signature:s=""}=n||{};return t.result=(0,e.addHexPrefix)(s),null}return this.throwTxCancelTip()}async signTypedData(o,t={}){let a=o.hdPathMap[c];if(!(t.version==="V4"))return t.uiSignErrorMessage="Trezor: Only version 4 of typed data signing is supported",null;let r=JSON.parse(t.data),{domain_separator_hash:n,message_hash:s}=(0,v.default)(r,!0),{success:i,payload:C}=await u.default.ethereumSignTypedData({path:a,data:r,metamask_v4_compat:!0,domain_separator_hash:n,message_hash:s});return i?(g().focusLastOkPopupWithCache(),t.rawSig=C?.signature,null):this.throwTxCancelTip()}throwInvalidPassPhraseTip(){throw T.error(d("wallet_extension_transaction_toast_trezor")),new Error(w)}},j=new h;export{j as default};

window.inOKXExtension = true;
window.ASSETS_BUILD_TYPE = "prepub";

//# sourceMappingURL=ethAdapter-AWX44XGM.js.map
