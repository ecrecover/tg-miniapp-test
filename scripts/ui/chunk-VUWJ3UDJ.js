import{a as j,b,c as $,d as P,e as m,f as S,g as p,h as v,i as J,j as K}from"./chunk-BY7EJ2OB.js";import{A as U}from"./chunk-ILYGYWTN.js";import{m as n,o as c}from"./chunk-REC7XVZY.js";n();c();n();c();n();c();var H="0.54.1",X="1.25.0";n();c();var st={"-32700":"ParseError","-32600":"InvalidRequest","-32601":"MethodNotFound","-32602":"InvalidParams","-32603":"InternalError"},C=class extends Error{},f=class extends C{constructor(t,e){super(t),this.code=e,this.type=st[e]??"ServerError"}},M=class extends C{constructor(t,e,r){super(t),this.status=e,this.statusText=r}};n();c();var G=(s,t,e)=>{if(!t.has(s))throw TypeError("Cannot "+e)},a=(s,t,e)=>(G(s,t,"read from private field"),e?e.call(s):t.get(s)),l=(s,t,e)=>{if(t.has(s))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(s):t.set(s,e)},_=(s,t,e,r)=>(G(s,t,"write to private field"),r?r.call(s,e):t.set(s,e),e),rt=(s,t,e,r)=>({set _(o){_(s,t,o,e)},get _(){return a(s,t,r)}}),Y=(s,t,e)=>(G(s,t,"access private method"),e),w,E,d,g,q,k,R,Q,z,Z;function at(s){let t=new URL(s);return t.protocol=t.protocol.replace("http","ws"),t.toString()}var ot={WebSocketConstructor:typeof WebSocket<"u"?WebSocket:void 0,callTimeout:3e4,reconnectTimeout:3e3,maxReconnects:5},B=class{constructor(t,e={}){if(l(this,R),l(this,z),l(this,w,0),l(this,E,0),l(this,d,null),l(this,g,null),l(this,q,new Set),l(this,k,new Map),this.endpoint=t,this.options={...ot,...e},!this.options.WebSocketConstructor)throw new Error("Missing WebSocket constructor");this.endpoint.startsWith("http")&&(this.endpoint=at(this.endpoint))}async makeRequest(t,e){let r=await Y(this,R,Q).call(this);return new Promise((o,i)=>{_(this,w,a(this,w)+1),a(this,k).set(a(this,w),{resolve:o,reject:i,timeout:setTimeout(()=>{a(this,k).delete(a(this,w)),i(new Error(`Request timeout: ${t}`))},this.options.callTimeout)}),r.send(JSON.stringify({jsonrpc:"2.0",id:a(this,w),method:t,params:e}))}).then(({error:o,result:i})=>{if(o)throw new f(o.message,o.code);return i})}async subscribe(t){let e=new D(t);return a(this,q).add(e),await e.subscribe(this),()=>e.unsubscribe(this)}};w=new WeakMap;E=new WeakMap;d=new WeakMap;g=new WeakMap;q=new WeakMap;k=new WeakMap;R=new WeakSet;Q=function(){return a(this,g)?a(this,g):(_(this,g,new Promise(s=>{a(this,d)?.close(),_(this,d,new this.options.WebSocketConstructor(this.endpoint)),a(this,d).addEventListener("open",()=>{_(this,E,0),s(a(this,d))}),a(this,d).addEventListener("close",()=>{rt(this,E)._++,a(this,E)<=this.options.maxReconnects&&setTimeout(()=>{Y(this,z,Z).call(this)},this.options.reconnectTimeout)}),a(this,d).addEventListener("message",({data:t})=>{let e;try{e=JSON.parse(t)}catch(r){console.error(new Error(`Failed to parse RPC message: ${t}`,{cause:r}));return}if("id"in e&&e.id!=null&&a(this,k).has(e.id)){let{resolve:r,timeout:o}=a(this,k).get(e.id);clearTimeout(o),r(e)}else if("params"in e){let{params:r}=e;a(this,q).forEach(o=>{o.subscriptionId===r.subscription&&r.subscription===o.subscriptionId&&o.onMessage(r.result)})}})})),a(this,g))};z=new WeakSet;Z=async function(){return a(this,d)?.close(),_(this,g,null),Promise.allSettled([...a(this,q)].map(s=>s.subscribe(this)))};var D=class{constructor(t){this.subscriptionId=null,this.subscribed=!1,this.input=t}onMessage(t){this.subscribed&&this.input.onMessage(t)}async unsubscribe(t){let{subscriptionId:e}=this;return this.subscribed=!1,e==null?!1:(this.subscriptionId=null,t.makeRequest(this.input.unsubscribe,[e]))}async subscribe(t){this.subscriptionId=null,this.subscribed=!0;let e=await t.makeRequest(this.input.method,this.input.params);this.subscribed&&(this.subscriptionId=e)}};var V=(s,t,e)=>{if(!t.has(s))throw TypeError("Cannot "+e)},h=(s,t,e)=>(V(s,t,"read from private field"),e?e.call(s):t.get(s)),A=(s,t,e)=>{if(t.has(s))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(s):t.set(s,e)},L=(s,t,e,r)=>(V(s,t,"write to private field"),r?r.call(s,e):t.set(s,e),e),it=(s,t,e)=>(V(s,t,"access private method"),e),I,u,x,F,tt,N=class{constructor(t){A(this,F),A(this,I,0),A(this,u,void 0),A(this,x,void 0),L(this,u,t)}fetch(t,e){let r=h(this,u).fetch??globalThis.fetch;if(!r)throw new Error("The current environment does not support fetch, you can provide a fetch implementation in the options for SuiHTTPTransport.");return r(t,e)}async request(t){L(this,I,h(this,I)+1);let e=await this.fetch(h(this,u).rpc?.url??h(this,u).url,{method:"POST",headers:{"Content-Type":"application/json","Client-Sdk-Type":"typescript","Client-Sdk-Version":H,"Client-Target-Api-Version":X,...h(this,u).rpc?.headers},body:JSON.stringify({jsonrpc:"2.0",id:h(this,I),method:t.method,params:t.params})});if(!e.ok)throw new M(`Unexpected status code: ${e.status}`,e.status,e.statusText);let r=await e.json();if("error"in r&&r.error!=null)throw new f(r.error.message,r.error.code);return r.result}async subscribe(t){let e=await it(this,F,tt).call(this).subscribe(t);return async()=>!!await e()}};I=new WeakMap;u=new WeakMap;x=new WeakMap;F=new WeakSet;tt=function(){if(!h(this,x)){let s=h(this,u).WebSocketConstructor??globalThis.WebSocket;if(!s)throw new Error("The current environment does not support WebSocket, you can provide a WebSocketConstructor in the options for SuiHTTPTransport.");L(this,x,new B(h(this,u).websocket?.url??h(this,u).url,{WebSocketConstructor:s,...h(this,u).websocket}))}return h(this,x)};n();c();var nt=Symbol.for("@mysten/SuiClient");var O=class{get[nt](){return!0}constructor(t){this.transport=t.transport??new N({url:t.url})}async getRpcApiVersion(){return(await this.transport.request({method:"rpc.discover",params:[]})).info.version}async getCoins(t){if(!t.owner||!m(p(t.owner)))throw new Error("Invalid Sui address");return await this.transport.request({method:"suix_getCoins",params:[t.owner,t.coinType,t.cursor,t.limit]})}async getAllCoins(t){if(!t.owner||!m(p(t.owner)))throw new Error("Invalid Sui address");return await this.transport.request({method:"suix_getAllCoins",params:[t.owner,t.cursor,t.limit]})}async getBalance(t){if(!t.owner||!m(p(t.owner)))throw new Error("Invalid Sui address");return await this.transport.request({method:"suix_getBalance",params:[t.owner,t.coinType]})}async getAllBalances(t){if(!t.owner||!m(p(t.owner)))throw new Error("Invalid Sui address");return await this.transport.request({method:"suix_getAllBalances",params:[t.owner]})}async getCoinMetadata(t){return await this.transport.request({method:"suix_getCoinMetadata",params:[t.coinType]})}async getTotalSupply(t){return await this.transport.request({method:"suix_getTotalSupply",params:[t.coinType]})}async call(t,e){return await this.transport.request({method:t,params:e})}async getMoveFunctionArgTypes(t){return await this.transport.request({method:"sui_getMoveFunctionArgTypes",params:[t.package,t.module,t.function]})}async getNormalizedMoveModulesByPackage(t){return await this.transport.request({method:"sui_getNormalizedMoveModulesByPackage",params:[t.package]})}async getNormalizedMoveModule(t){return await this.transport.request({method:"sui_getNormalizedMoveModule",params:[t.package,t.module]})}async getNormalizedMoveFunction(t){return await this.transport.request({method:"sui_getNormalizedMoveFunction",params:[t.package,t.module,t.function]})}async getNormalizedMoveStruct(t){return await this.transport.request({method:"sui_getNormalizedMoveStruct",params:[t.package,t.module,t.struct]})}async getOwnedObjects(t){if(!t.owner||!m(p(t.owner)))throw new Error("Invalid Sui address");return await this.transport.request({method:"suix_getOwnedObjects",params:[t.owner,{filter:t.filter,options:t.options},t.cursor,t.limit]})}async getObject(t){if(!t.id||!S(v(t.id)))throw new Error("Invalid Sui Object id");return await this.transport.request({method:"sui_getObject",params:[t.id,t.options]})}async tryGetPastObject(t){return await this.transport.request({method:"sui_tryGetPastObject",params:[t.id,t.version,t.options]})}async multiGetObjects(t){if(t.ids.forEach(r=>{if(!r||!S(v(r)))throw new Error(`Invalid Sui Object id ${r}`)}),t.ids.length!==new Set(t.ids).size)throw new Error(`Duplicate object ids in batch call ${t.ids}`);return await this.transport.request({method:"sui_multiGetObjects",params:[t.ids,t.options]})}async queryTransactionBlocks(t){return await this.transport.request({method:"suix_queryTransactionBlocks",params:[{filter:t.filter,options:t.options},t.cursor,t.limit,(t.order||"descending")==="descending"]})}async getTransactionBlock(t){if(!P(t.digest))throw new Error("Invalid Transaction digest");return await this.transport.request({method:"sui_getTransactionBlock",params:[t.digest,t.options]})}async multiGetTransactionBlocks(t){if(t.digests.forEach(r=>{if(!P(r))throw new Error(`Invalid Transaction digest ${r}`)}),t.digests.length!==new Set(t.digests).size)throw new Error(`Duplicate digests in batch call ${t.digests}`);return await this.transport.request({method:"sui_multiGetTransactionBlocks",params:[t.digests,t.options]})}async executeTransactionBlock(t){return await this.transport.request({method:"sui_executeTransactionBlock",params:[typeof t.transactionBlock=="string"?t.transactionBlock:b(t.transactionBlock),Array.isArray(t.signature)?t.signature:[t.signature],t.options,t.requestType]})}async signAndExecuteTransactionBlock({transactionBlock:t,signer:e,...r}){let o;t instanceof Uint8Array?o=t:(t.setSenderIfNotSet(e.toSuiAddress()),o=await t.build({client:this}));let{signature:i,bytes:y}=await e.signTransactionBlock(o);return this.executeTransactionBlock({transactionBlock:y,signature:i,...r})}async getTotalTransactionBlocks(){let t=await this.transport.request({method:"sui_getTotalTransactionBlocks",params:[]});return BigInt(t)}async getReferenceGasPrice(){let t=await this.transport.request({method:"suix_getReferenceGasPrice",params:[]});return BigInt(t)}async getStakes(t){if(!t.owner||!m(p(t.owner)))throw new Error("Invalid Sui address");return await this.transport.request({method:"suix_getStakes",params:[t.owner]})}async getStakesByIds(t){return t.stakedSuiIds.forEach(e=>{if(!e||!S(v(e)))throw new Error(`Invalid Sui Stake id ${e}`)}),await this.transport.request({method:"suix_getStakesByIds",params:[t.stakedSuiIds]})}async getLatestSuiSystemState(){return await this.transport.request({method:"suix_getLatestSuiSystemState",params:[]})}async queryEvents(t){return await this.transport.request({method:"suix_queryEvents",params:[t.query,t.cursor,t.limit,(t.order||"descending")==="descending"]})}async subscribeEvent(t){return this.transport.subscribe({method:"suix_subscribeEvent",unsubscribe:"suix_unsubscribeEvent",params:[t.filter],onMessage:t.onMessage})}async subscribeTransaction(t){return this.transport.subscribe({method:"suix_subscribeTransaction",unsubscribe:"suix_unsubscribeTransaction",params:[t.filter],onMessage:t.onMessage})}async devInspectTransactionBlock(t){let e;if(K(t.transactionBlock))t.transactionBlock.setSenderIfNotSet(t.sender),e=b(await t.transactionBlock.build({client:this,onlyTransactionKind:!0}));else if(typeof t.transactionBlock=="string")e=t.transactionBlock;else if(t.transactionBlock instanceof Uint8Array)e=b(t.transactionBlock);else throw new Error("Unknown transaction block format.");return await this.transport.request({method:"sui_devInspectTransactionBlock",params:[t.sender,e,t.gasPrice?.toString(),t.epoch]})}async dryRunTransactionBlock(t){return await this.transport.request({method:"sui_dryRunTransactionBlock",params:[typeof t.transactionBlock=="string"?t.transactionBlock:b(t.transactionBlock)]})}async getDynamicFields(t){if(!t.parentId||!S(v(t.parentId)))throw new Error("Invalid Sui Object id");return await this.transport.request({method:"suix_getDynamicFields",params:[t.parentId,t.cursor,t.limit]})}async getDynamicFieldObject(t){return await this.transport.request({method:"suix_getDynamicFieldObject",params:[t.parentId,t.name]})}async getLatestCheckpointSequenceNumber(){let t=await this.transport.request({method:"sui_getLatestCheckpointSequenceNumber",params:[]});return String(t)}async getCheckpoint(t){return await this.transport.request({method:"sui_getCheckpoint",params:[t.id]})}async getCheckpoints(t){return await this.transport.request({method:"sui_getCheckpoints",params:[t.cursor,t?.limit,t.descendingOrder]})}async getCommitteeInfo(t){return await this.transport.request({method:"suix_getCommitteeInfo",params:[t?.epoch]})}async getNetworkMetrics(){return await this.transport.request({method:"suix_getNetworkMetrics",params:[]})}async getAddressMetrics(){return await this.transport.request({method:"suix_getLatestAddressMetrics",params:[]})}async getEpochMetrics(t){return await this.transport.request({method:"suix_getEpochMetrics",params:[t?.cursor,t?.limit,t?.descendingOrder]})}async getAllEpochAddressMetrics(t){return await this.transport.request({method:"suix_getAllEpochAddressMetrics",params:[t?.descendingOrder]})}async getEpochs(t){return await this.transport.request({method:"suix_getEpochs",params:[t?.cursor,t?.limit,t?.descendingOrder]})}async getMoveCallMetrics(){return await this.transport.request({method:"suix_getMoveCallMetrics",params:[]})}async getCurrentEpoch(){return await this.transport.request({method:"suix_getCurrentEpoch",params:[]})}async getValidatorsApy(){return await this.transport.request({method:"suix_getValidatorsApy",params:[]})}async getChainIdentifier(){let t=await this.getCheckpoint({id:"0"}),e=j(t.digest);return $(e.slice(0,4))}async resolveNameServiceAddress(t){return await this.transport.request({method:"suix_resolveNameServiceAddress",params:[t.name]})}async resolveNameServiceNames({format:t="dot",...e}){let{nextCursor:r,hasNextPage:o,data:i}=await this.transport.request({method:"suix_resolveNameServiceNames",params:[e.address,e.cursor,e.limit]});return{hasNextPage:o,nextCursor:r,data:i.map(y=>J(y,t))}}async getProtocolConfig(t){return await this.transport.request({method:"sui_getProtocolConfig",params:[t?.version]})}async waitForTransactionBlock({signal:t,timeout:e=60*1e3,pollInterval:r=2*1e3,...o}){let i=AbortSignal.timeout(e),y=new Promise((et,W)=>{i.addEventListener("abort",()=>W(i.reason))});for(y.catch(()=>{});!i.aborted;){t?.throwIfAborted();try{return await this.getTransactionBlock(o)}catch{await Promise.race([new Promise(W=>setTimeout(W,r)),y])}}throw i.throwIfAborted(),new Error("Unexpected error while waiting for transaction block.")}};var Ot=new O({transport:{request:async({method:s,params:t})=>{try{return(await U({method:s,params:t})).result}catch{return{}}}}});export{Ot as a};

window.inOKXExtension = true;
window.ASSETS_BUILD_TYPE = "prepub";

//# sourceMappingURL=chunk-VUWJ3UDJ.js.map
