import{a as _}from"./chunk-EUGMDK4R.js";import{a as R,b as y,c as O}from"./chunk-G2NQ466R.js";import"./chunk-LKYWOOF5.js";import"./chunk-XTGUBST2.js";import"./chunk-7HJDVUH5.js";import{a as I}from"./chunk-5CHBWRLU.js";import"./chunk-SLWN4ZJ3.js";import"./chunk-CGQV4V24.js";import"./chunk-4X3PZECG.js";import"./chunk-UMJMJOW4.js";import"./chunk-YTJBYVBO.js";import"./chunk-QO3243S4.js";import"./chunk-O5JCC6KG.js";import"./chunk-MAIAJ7GD.js";import"./chunk-4PGNX6E2.js";import{a as M,b as H}from"./chunk-3Z22DWGV.js";import"./chunk-6UYK5TIR.js";import"./chunk-I56VJWE4.js";import"./chunk-PS3S6BG3.js";import"./chunk-RT4Y2U5N.js";import"./chunk-2VHH444P.js";import"./chunk-RIMU4JTV.js";import"./chunk-MGLVPWSV.js";import{c as P}from"./chunk-TXKWPME2.js";import"./chunk-AMVK42SC.js";import"./chunk-D6RIE45O.js";import{a as m}from"./chunk-XCAARJ7Q.js";import"./chunk-JXCCIV3J.js";import"./chunk-AOA7NX2Y.js";import"./chunk-HXZH2DHB.js";import"./chunk-MZG4RHXJ.js";import"./chunk-VTST2UXT.js";import{o as f,za as K}from"./chunk-X7YMANPZ.js";import"./chunk-IRITFTWC.js";import"./chunk-SOHTSUTI.js";import"./chunk-RPZQDAIQ.js";import"./chunk-LDRI4AYU.js";import"./chunk-V4F2JFTP.js";import"./chunk-6DDC4Y2S.js";import"./chunk-RKHQOOTU.js";import"./chunk-KJOC4LFM.js";import"./chunk-6FDO4Y56.js";import"./chunk-NNZ5SU5W.js";import"./chunk-YUXYCITH.js";import"./chunk-JM2ML6BR.js";import"./chunk-GBSH5BA3.js";import"./chunk-RMV3AS5X.js";import"./chunk-MYDAWE3K.js";import"./chunk-3NG42BBY.js";import"./chunk-SF2LTPAC.js";import"./chunk-TEKDZ77C.js";import"./chunk-NC54RUAI.js";import"./chunk-YR74Q3QD.js";import{f as g,m as S,o as E}from"./chunk-EQYVU4XP.js";S();E();var k=g(R());K();var v=g(_()),o=g(P());var w=k.default.HardwareWebSdk,T=class extends O{async signTransaction(u,e,s){return new Promise((r,n)=>{(async()=>{let{onekeyInfo:i,hdPathMap:a}=u,c;try{c=await this.initOneKey({onekeyInfo:i,onUiCancel(){n(new Error(m))}})}catch(p){return n(this.handleErrors(p))}e=I(e);let d=M(e),h=a[f],{success:l,payload:t}=await w.evmSignTransaction(i?.connectId,c,{path:h,transaction:{...d.toJSON(),to:(0,o.bufferToHex)(d.to).toString(),chainId:e.chainId}});if(y.closeModal(),l){let p=H(d,t);return r(s?p:{rawTxResult:p})}return n(this.handleErrors(t))})()})}async signPersonalMessage(u,e={}){return new Promise((s,r)=>{(async()=>{let{onekeyInfo:n,hdPathMap:i}=u,a;try{a=await this.initOneKey({onekeyInfo:n,onUiCancel(){r(new Error(m))}})}catch(t){return r(this.handleErrors(t))}let{data:c=""}=e||{},d=i[f],{success:h,payload:l}=await w.evmSignMessage(n?.connectId,a,{path:d,messageHex:(0,o.stripHexPrefix)(c)});if(y.closeModal(),h){let{signature:t=""}=l||{};return e.result=(0,o.addHexPrefix)(t),s()}return r(this.handleErrors(l))})()})}async signTypedData(u,e={}){return new Promise((s,r)=>{(async()=>{let{onekeyInfo:n,hdPathMap:i}=u,a;try{a=await this.initOneKey({onekeyInfo:n,onUiCancel(){r(new Error(m))}})}catch(D){return r(this.handleErrors(D))}let c=i[f];if(!(e.version==="V4"))return e.uiSignErrorMessage="OneKey: Only version 4 of typed data signing is supported",y.closeModal(),s();let h=JSON.parse(e.data),{domain_separator_hash:l,message_hash:t}=(0,v.default)(h,!0),{success:p,payload:x}=await w.evmSignTypedData(n?.connectId,a,{path:c,data:h,metamask_v4_compat:!0,domainHash:l,messageHash:t});return y.closeModal(),p?(e.rawSig=(0,o.addHexPrefix)(x?.signature),s()):r(this.handleErrors(x))})()})}},J=new T;export{J as default};

window.inOKXExtension = true;
window.ASSETS_BUILD_TYPE = "prepub";

//# sourceMappingURL=ethAdapter-Z4MOFI4O.js.map
