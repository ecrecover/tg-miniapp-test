import{a as L,g as u,h as T}from"./chunk-ZSTQVNP4.js";import"./chunk-7CHHD7YT.js";import"./chunk-HKLZAYYN.js";import{a as w}from"./chunk-ROVVMPCE.js";import{m as l}from"./chunk-QZDHFNHK.js";import"./chunk-TWHQQAAZ.js";import"./chunk-24PQFN5C.js";import"./chunk-6KPQELH2.js";import"./chunk-EJQOS3F4.js";import"./chunk-F2C2DYTN.js";import"./chunk-VI37HTG4.js";import"./chunk-VCAWL4NW.js";import{a as D,b as E}from"./chunk-UHHZIQ2V.js";import"./chunk-Q277JDUA.js";import"./chunk-2LDYLNUY.js";import"./chunk-KCITCUTL.js";import"./chunk-YZ3HCB4K.js";import"./chunk-EZ7VUFME.js";import"./chunk-T2OWRX3Y.js";import"./chunk-C3FJ2D4V.js";import{c as I}from"./chunk-C5ZJZEPI.js";import"./chunk-SLEUZTBQ.js";import"./chunk-4X6ZAX3L.js";import"./chunk-4QSQKIBZ.js";import"./chunk-OXVQDEZW.js";import"./chunk-X3G52GGX.js";import"./chunk-WUKT6J7S.js";import"./chunk-FTJCOLFJ.js";import{cc as c,jc as F,o as a,za as A}from"./chunk-QG673PNL.js";import"./chunk-ZUFARSFM.js";import"./chunk-6MTHEPGF.js";import"./chunk-ZQQ7HNWV.js";import"./chunk-Y62GSKHT.js";import"./chunk-J2OEXOWC.js";import"./chunk-YVYBAMPE.js";import"./chunk-ZOQTSYT4.js";import"./chunk-ADZWCU3Q.js";import"./chunk-FDI7TLXH.js";import"./chunk-L4HTIIR6.js";import"./chunk-733NI6T7.js";import"./chunk-EYWGNJVY.js";import"./chunk-DW2DZMT3.js";import"./chunk-C672KFBI.js";import"./chunk-YSXN7JDZ.js";import"./chunk-TBVIGR5T.js";import"./chunk-FHQVMQUK.js";import"./chunk-XNS2NFYY.js";import{f as y,h as f,m as M,n as g,o as S}from"./chunk-REC7XVZY.js";M();S();var m=y(I());F();var i=y(L());A();var h=class{constructor(){f(this,"signTransaction",async(t,e,n)=>{e=w(e);let o=D(e),s=o.getMessageToSign(!1),p=g.Buffer.isBuffer(s)?s.toString("hex"):m.rlp.encode(s).toString("hex"),{type:r,chainId:P}=e,q={path:t.hdPathMap[a],chainId:P,requestId:c().toLowerCase(),signData:p,dataType:r===l.FEE_MARKET?i.KeystoneEthereumSDK.DataType.typedTransaction:i.KeystoneEthereumSDK.DataType.transaction,xfp:t.masterFingerprint},C=await T.openModal(u.showTxParams,{signRequest:q,baseChain:a}),d=g.Buffer.from(C,"hex"),R=d.slice(0,32),b=d.slice(32,64),N=d.slice(64),x=E(o,{r:R,s:b,v:N});return n?x:{rawTxResult:x}});f(this,"signTypedData",async(t,e)=>{let n=t.hdPathMap[a];if(!["V4","V3"].includes(e.version)){e.uiSignErrorMessage="this version of typed data signing is no't supported";return}let s=g.Buffer.from(e.data,"utf-8"),p={path:n,requestId:c().toLowerCase(),signData:s,dataType:i.KeystoneEthereumSDK.DataType.typedData,xfp:t.masterFingerprint},r=await T.openModal(u.showTxParams,{signRequest:p,baseChain:a});e.rawSig=`0x${r}`})}async signPersonalMessage(t,e){let n=t.hdPathMap[a],o=(0,m.stripHexPrefix)(e.data),s={path:n,requestId:c().toLowerCase(),signData:o,dataType:i.KeystoneEthereumSDK.DataType.personalMessage,xfp:t.masterFingerprint},r=`0x${await T.openModal(u.showTxParams,{signRequest:s,baseChain:a})}`;e.result=r}},$=new h;export{$ as default};

window.inOKXExtension = true;
window.ASSETS_BUILD_TYPE = "prepub";

//# sourceMappingURL=ethAdapter-MNIWGDZZ.js.map
