import{a as I,b as M}from"./chunk-PXRM7MIH.js";import{a as H}from"./chunk-ZC47SUCB.js";import"./chunk-HKLZAYYN.js";import{a as _}from"./chunk-RWYXURLX.js";import{a as x}from"./chunk-ROVVMPCE.js";import"./chunk-D5SV35TH.js";import"./chunk-VI37HTG4.js";import{d as g,f as D}from"./chunk-MNNY2ODL.js";import"./chunk-VCAWL4NW.js";import{a as y,b as S}from"./chunk-UHHZIQ2V.js";import"./chunk-Q277JDUA.js";import"./chunk-2LDYLNUY.js";import"./chunk-KCITCUTL.js";import"./chunk-YZ3HCB4K.js";import"./chunk-EZ7VUFME.js";import"./chunk-T2OWRX3Y.js";import"./chunk-C3FJ2D4V.js";import{c as E}from"./chunk-C5ZJZEPI.js";import{a as w}from"./chunk-4X6ZAX3L.js";import"./chunk-OXVQDEZW.js";import"./chunk-X3G52GGX.js";import"./chunk-WUKT6J7S.js";import"./chunk-FTJCOLFJ.js";import{o as c,za as O}from"./chunk-QG673PNL.js";import"./chunk-ZUFARSFM.js";import{G as T}from"./chunk-6MTHEPGF.js";import{I as P,w as d}from"./chunk-ZQQ7HNWV.js";import"./chunk-Y62GSKHT.js";import"./chunk-ZOQTSYT4.js";import"./chunk-ADZWCU3Q.js";import"./chunk-ZPRPROG4.js";import"./chunk-FDI7TLXH.js";import"./chunk-L4HTIIR6.js";import"./chunk-733NI6T7.js";import"./chunk-EYWGNJVY.js";import"./chunk-PIGJQYQ3.js";import"./chunk-YSXN7JDZ.js";import"./chunk-TBVIGR5T.js";import"./chunk-FHQVMQUK.js";import"./chunk-XNS2NFYY.js";import{f,m,o as l}from"./chunk-REC7XVZY.js";m();l();var e=f(E());var u=f(I());O();D();var v=f(H());P();var h=class extends M{async signTransaction(o,t,a){let p=o.hdPathMap[c];t=x(t);let r=y(t),{payload:n,success:s}=await u.default.ethereumSignTransaction({path:p,transaction:{...r.toJSON(),to:(0,e.bufferToHex)(r.to).toString(),chainId:t.chainId}});if(s){globalThis.platform.focusCurrentWindow();let i=S(r,{...n});return _(i,t.from)?a?i:{rawTxResult:i}:this.throwInvalidPassPhraseTip()}return this.throwTxCancelTip()}async signPersonalMessage(o,t={}){let a=o.hdPathMap[c],{data:p=""}=t||{},{success:r,payload:n}=await u.default.ethereumSignMessage({path:a,message:(0,e.stripHexPrefix)(p),hex:!0});if(r){globalThis.platform.focusCurrentWindow();let{signature:s=""}=n||{};return t.result=(0,e.addHexPrefix)(s),null}return this.throwTxCancelTip()}async signTypedData(o,t={}){let a=o.hdPathMap[c];if(!(t.version==="V4"))return t.uiSignErrorMessage="Trezor: Only version 4 of typed data signing is supported",null;let r=JSON.parse(t.data),{domain_separator_hash:n,message_hash:s}=(0,v.default)(r,!0),{success:i,payload:C}=await u.default.ethereumSignTypedData({path:a,data:r,metamask_v4_compat:!0,domain_separator_hash:n,message_hash:s});return i?(g().focusLastOkPopupWithCache(),t.rawSig=C?.signature,null):this.throwTxCancelTip()}throwInvalidPassPhraseTip(){throw T.error(d("wallet_extension_transaction_toast_trezor")),new Error(w)}},j=new h;export{j as default};

window.inOKXExtension = true;
window.ASSETS_BUILD_TYPE = "prepub";

//# sourceMappingURL=ethAdapter-HRORIJUX.js.map
